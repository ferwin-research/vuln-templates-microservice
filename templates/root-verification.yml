vulnerability:
  name:
    pt-br: Nenhuma verificação de root no Android
    en: App without root privilegies verification
    es: No hay verificación de root en Android
  type: android
  category: Other
  description:
    pt-br: Não foi possível detectar na aplicação qualquer detecção de root ou ela encontra-se implementada de maneira incorreta. Rooting é o processo de obter acesso administrativo ou privilegiado no sistema operacional Android. Uma vez que há uma quebra nas restrições de segurança do sistema, é possível que o comportamento das aplicações seja alterado em tempo de execução e que o acesso ao sistema de arquivos seja feito de maneira ilimitada, consequentemente expondo as aplicações instaladas e suas informações armazenadas.
    en: It was not possible to detect in the application any root detection or it is implemented incorrectly. Rooting is the process of obtaining administrative or privileged access to the Android operating system. Once there is a breach in the system's security restrictions, it is possible that the behavior of the applications is changed at runtime and that access to the file system is done in an unlimited way, consequently exposing the installed applications and their stored information.
    es: No fue posible detectar en la aplicación ninguna detección de root o está implementada incorrectamente. Rooting es el proceso de obtener acceso administrativo o privilegiado al sistema operativo Android. Una vez que hay una violación en las restricciones de seguridad del sistema, es posible que el comportamiento de las aplicaciones cambie en tiempo de ejecución y que el acceso al sistema de archivos se realice de manera ilimitada, exponiendo consecuentemente las aplicaciones instaladas y su información almacenada.
  recommendation:
    pt-br: "Detectar root em um dispositivo Android de forma efetiva não é uma tarefa simples. Um dos métodos mais utilizados é a checagem da existência de arquivos encontrados com frequência em dispositivos root, como: /system/app/Superuser.apk, /system/xbin/daemonsu, /system/bin/su, etc. Outros métodos de detecção consistem em executar o comando su através do método Runtime.getRuntime.exec() e verificar se uma exceção é disparada, localizar processos suspeitos em execução no sistema, a lista de pacotes de rooting instalados, builds customizados do Android, etc. As referências provêm detalhes sobre cada abordagem descrita. Recomenda-se a utilização de bibliotecas de terceiros, como Rootbeer [2] e a API SafetyNet [3] para execução dessa checagem, visto que as técnicas de rooting evoluem constantemente e bibliotecas como as citadas tendem a acompanhar tais evoluções."
    en: "Detecting root on an Android device effectively is not a simple task. One of the most used methods is to check the existence of files frequently found on root devices, such as: /system/app/Superuser.apk, /system/xbin/daemonsu, /system/bin/su, etc. Other detection methods consist of executing the su command through the Runtime.getRuntime.exec() method and checking if an exception is thrown, locating suspicious processes running on the system, the list of installed rooting packages, customized Android builds, etc. The references provide details on each described approach. It is recommended to use third-party libraries, such as Rootbeer [2] and the SafetyNet API [3] to perform this check, since rooting techniques are constantly evolving and libraries such as those mentioned tend to keep up with such evolutions."
    es: "Detectar root en un dispositivo Android de manera efectiva no es una tarea sencilla. Uno de los métodos más utilizados es verificar la existencia de archivos que se encuentran con frecuencia en dispositivos root, como: /system/app/Superuser.apk, /system/xbin/daemonsu, /system/bin/su, etc. Otros métodos de detección consisten en ejecutar el comando su a través del método Runtime.getRuntime.exec() y verificar si se lanza una excepción, localizar procesos sospechosos en ejecución en el sistema, la lista de paquetes de rooting instalados, compilaciones personalizadas de Android, etc. Las referencias proporcionan detalles sobre cada enfoque descrito. Se recomienda utilizar bibliotecas de terceros, como Rootbeer [2] y la API SafetyNet [3] para realizar esta verificación, ya que las técnicas de rooting evolucionan constantemente y las bibliotecas mencionadas tienden a mantenerse al día con tales evoluciones."
  references:
    - https://github.com/OWASP/owasp-mastg/blob/master/Document/0x05j-Testing-Resiliency-Against-Reverse-Engineering.md
    - https://owasp.org/www-project-mobile-top-10/2016-risks/m8-code-tampering