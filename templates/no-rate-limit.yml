vulnerability:
  name:
    pt-br: Falta de controles contra ataques automatizados
    en: Lack of controls against automated attacks
    es: Falta de controles contra ataques automatizados
  type: web
  category: Other
  description:
    pt-br: Esse tipo de vulnerabilidade ocorre quando não são implementados controles de frequência de interações com o servidor, além de normalmente envolver uma diferença no comportamento do servidor ao receber dados válidos e inválidos. Por exemplo um endpoint de autenticação, diante do envio de credenciais válidas, retornará uma resposta diferente das antecedentes com as informações de sessão. Outro exemplo simples, ainda no caso de autenticação, é quando o servidor responde com "Usuário inválido" ao receber uma requisição de login cujo usuário não existe, e responde com "Login inválido" quando o usuário existe no cadastro mas a senha não bate, permitindo a enumeração de usuários. Porém, qualquer caso no qual exista uma ausência de controles de frequência (como CAPTCHA, rate-limiting etc.) pode introduzir a possibilidade de ataques automatizados, incluindo ataques cujo objetivo é simplesmente causar a exaustão de recursos.
    en: This type of vulnerability occurs when frequency controls are not implemented, and normally involves a difference in server behavior when receiving valid and invalid data. For example, an authentication endpoint, when receiving valid credentials, will return a different response from the previous ones with session information. Another simple example, still in the case of authentication, is when the server responds with "Invalid user" when receiving a login request whose user does not exist, and responds with "Invalid login" when the user exists in the registry but the password does not match, allowing user enumeration. However, any case in which there is an absence of frequency controls (such as CAPTCHA, rate-limiting, etc.) can introduce the possibility of automated attacks, including attacks whose goal is simply to cause resource exhaustion.
    es: Este tipo de vulnerabilidad ocurre cuando no se implementan controles de frecuencia, y normalmente implica una diferencia en el comportamiento del servidor al recibir datos válidos e inválidos. Por ejemplo, un punto final de autenticación, al recibir credenciales válidas, devolverá una respuesta diferente de las anteriores con información de sesión. Otro ejemplo simple, aún en el caso de autenticación, es cuando el servidor responde con "Usuario inválido" al recibir una solicitud de inicio de sesión cuyo usuario no existe, y responde con "Inicio de sesión inválido" cuando el usuario existe en el registro pero la contraseña no coincide, lo que permite la enumeración de usuarios. Sin embargo, cualquier caso en el que haya una ausencia de controles de frecuencia (como CAPTCHA, limitación de velocidad, etc.) puede introducir la posibilidad de ataques automatizados, incluidos los ataques cuyo objetivo es simplemente causar la agotamiento de recursos.
  recommendation:
    pt-br: |
      Para que esta falha não aconteça, deve ser implementado algum método de verificação nas frequências de requisições. A utilização destes métodos é efetiva pois garante que um atacante seja facilmente detectado ou seu script de automação seja bloqueado antes de efetivar o ataque.
      Alguns métodos que podem ser usados contra ataques automatizados:
      * CAPTCHA, é um programa que consegue distinguir entre uma máquina/robô e um usuário, para validar as requisições e não deixar que robôs automatizados abusem com requisições.
      * Esgotamento de tempo e controle da frequência das requisições, verificando a origem da requisição ou ID do usuário para que o ele não consiga fazer a mesma ação em um pequeno intervalo de tempo.
    en: |
      To prevent this failure from happening, some method of verification in the frequency of requests must be implemented. The use of these methods is effective because it ensures that an attacker is easily detected or their automation script is blocked before the attack is carried out.
      Some methods that can be used against automated attacks:
      * CAPTCHA, is a program that can distinguish between a machine/robot and a user, to validate requests and prevent automated robots from abusing requests.
      * Time exhaustion and control of the frequency of requests, checking the origin of the request or user ID so that the user cannot perform the same action in a short period of time.
    es: |
      Para evitar que esta falla ocurra, se debe implementar algún método de verificación en las frecuencias de solicitudes. La utilización de estos métodos es efectiva porque garantiza que un atacante sea fácilmente detectado o su script de automatización sea bloqueado antes de efectuar el ataque.
      Algunos métodos que se pueden utilizar contra ataques automatizados:
      * CAPTCHA, es un programa que puede distinguir entre una máquina/robot y un usuario, para validar las solicitudes y evitar que los robots automatizados abusen de las solicitudes.
      * Agotamiento de tiempo y control de la frecuencia de las solicitudes, verificando el origen de la solicitud o el ID del usuario para que el usuario no pueda realizar la misma acción en un corto período de tiempo.
  references:
    - https://owasp.org/www-community/controls/Blocking_Brute_Force_Attacks
    - https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html#protect-against-automated-attacks