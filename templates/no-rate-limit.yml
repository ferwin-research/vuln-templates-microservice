vulnerability:
  name:
    pt-br: Falta de controles contra ataques automatizados
    en: Lack of controls against automated attacks
    es: Falta de controles contra ataques automatizados
  type: web
  category: Other
  description:
    pt-br: Não existem controles de frequência de interações com o servidor implementados (como CAPTCHA, rate-limiting, etc.). A ausência desses controles pode representar um risco, pois permite que agentes maliciosos realizem ações prejudiciais, como enumeração de usuários, ataques de força bruta, ataques de exaustão de recursos, entre outros.
    en: There are no frequency controls for interactions with the server implemented (such as CAPTCHA, rate-limiting, etc.). The absence of these controls may pose a risk, as it allows malicious actors to carry out harmful actions, such as user enumeration, brute-force attacks, resource exhaustion attacks, among others.
    es: No se han implementado controles de frecuencia de interacciones con el servidor (como CAPTCHA, rate-limiting, etc.). La ausencia de estos controles puede representar un riesgo, ya que permite que actores maliciosos realicen acciones perjudiciales, como enumeración de usuarios, ataques de fuerza bruta, ataques de agotamiento de recursos, entre otros.
  recommendation:
    pt-br: |
      Para que esta falha não aconteça, deve ser implementado algum método de verificação nas frequências de requisições. A utilização destes métodos é efetiva pois garante que um atacante seja facilmente detectado ou seu script de automação seja bloqueado antes de efetivar o ataque.
      Alguns métodos que podem ser usados contra ataques automatizados:
      * CAPTCHA, é um programa que consegue distinguir entre uma máquina/robô e um usuário, para validar as requisições e não deixar que robôs automatizados abusem com requisições.
      * Esgotamento de tempo e controle da frequência das requisições, verificando a origem da requisição ou ID do usuário para que o ele não consiga fazer a mesma ação em um pequeno intervalo de tempo.
    en: |
      To prevent this failure from happening, some method of verification in the frequency of requests must be implemented. The use of these methods is effective because it ensures that an attacker is easily detected or their automation script is blocked before the attack is carried out.
      Some methods that can be used against automated attacks:
      * CAPTCHA, is a program that can distinguish between a machine/robot and a user, to validate requests and prevent automated robots from abusing requests.
      * Time exhaustion and control of the frequency of requests, checking the origin of the request or user ID so that the user cannot perform the same action in a short period of time.
    es: |
      Para evitar que esta falla ocurra, se debe implementar algún método de verificación en las frecuencias de solicitudes. La utilización de estos métodos es efectiva porque garantiza que un atacante sea fácilmente detectado o su script de automatización sea bloqueado antes de efectuar el ataque.
      Algunos métodos que se pueden utilizar contra ataques automatizados:
      * CAPTCHA, es un programa que puede distinguir entre una máquina/robot y un usuario, para validar las solicitudes y evitar que los robots automatizados abusen de las solicitudes.
      * Agotamiento de tiempo y control de la frecuencia de las solicitudes, verificando el origen de la solicitud o el ID del usuario para que el usuario no pueda realizar la misma acción en un corto período de tiempo.
  references:
    - https://owasp.org/www-community/controls/Blocking_Brute_Force_Attacks
    - https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html#protect-against-automated-attacks